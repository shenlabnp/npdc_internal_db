{% extends "layout.html.j2" %}
{% block content %}
  {% include "basic_header.html.j2" %}

  <!-- Instructions for using the search bar -->
  <div class="row">
    <div class="col">
      <div class="alert alert-info">
        <strong>Using the search bar:</strong><br>The general format of a search query is: &lt;query&gt;[&lt;column name&gt;]<br>For example, Streptomyces[Taxonomy] will query the Taxonomy column for the word Streptomyces.<br>Filter more than one column by using "and".<br>For example, searching both Taxonomy and Num. of genes would look like this: Streptomyces[Taxonomy] and 10[Num. of genes]<br>The NPDC No., GC content, Num. of BGCs, and Known BGC hits columns only accept numerical entries. Do not include "NPDC-" or "%" in your search.<br>Numerical searching allows filtering for a range of numbers using - and to filter with &lt; and &gt;<br>For example, filtering the Num. of BGCs could look like: 2-5[Num. of BGCs], &lt;6[Num. of BGCs], or &gt;3[Num. of BGCs]<br>The Assembly quality column only accepts “high”, “good”, “fair”, or “fragmented”.
      </div>
    </div>
  </div>

  <div class="row d-none">
    <div class="col">
      <div class="alert alert alert-primary">
          Our genomes database currently includes X strain genomes from X species (calculated by Mash cluster). X,XXX of the genomes are Actinobacterial, mostly from the genera xxx (x%), xxx (x%), and xxx (x %). Among the most underrepresented genera are x (x genomes), x (x genomes), x (x genomes), and x (x genomes).
      </div>
    </div>
  </div>
  <div class="row m-2 d-none">
    <div class="col">
      <div class="bs-component">
        <div class="accordion">
          <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
              <button class="accordion-button collapsed" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                <strong>Filtering</strong>
              </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne">
              <div class="accordion-body" id="select_result">
                (feature not yet implemented)
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <div class="h3 btn-secondary text-center p-2">&nbsp;</div>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <table id="table_strains" class="table table-striped table-bordered table-hover nowrap">
        <thead class="thead-light">
          <tr>
            <th>NPDC No.</th>
            <th>Taxonomy</th>
            <th>Mash cluster</th>
            <th>Assembly quality</th>
            <th>GC content</th>
            <th>Num. of BGCs</th>
            <th>Known BGC hits</th>
          </tr>
        </thead>
        <tbody class="tbody">
        </tbody>
      </table>
    </div>
  </div>

  <script type="text/javascript">
    $(document).ready(function(){
            function debounce(func, delay) {
            let debounceTimer;
            return function() {
              const context = this;
              const args = arguments;
              clearTimeout(debounceTimer);
              debounceTimer = setTimeout(() => func.apply(context, args), delay);
            };
          }

      var table = $("#table_strains").DataTable({
        searching: true,
        ordering:  false,
        serverSide: true,
        responsive: false,
        processing: true,
        aLengthMenu: [[25, 50, 250], [25, 50, 250]],
            iDisplayLength: 25,
        ajax: {
          url: "{{ url_for('root.page') }}api/genomes/get_overview",
          type: "GET",
          data: function(d) {
            //
          }
        },
        "columnDefs": [
          { className: "text-center", targets: [0] },
          { className: "text-end", targets: [4, 5, 6] },
          {
            targets: 0,
            render: function(data, type, row, meta) {
              let [genome_id, npdc_id] = data
              return "<a href=\"{{ url_for('root.page') }}genomes/view/" + genome_id + "\"><button class=\"btn btn-primary\">NPDC-" + npdc_id + "</button></a>";
            }
          },
          {
            targets: 1,
            render: function(data, type, row, meta) {
              return "<i><strong style='color: #222266;'>" + data + "</strong></i>";
            }
          },
          {
            targets: 3,
            render: function(data, type, row, meta) {
              let html_text = "";
              let badge_class = {
                "high": "rounded-pill bg-success",
                "good": "bg-success",
                "fair": "bg-secondary",
                "fragmented": "bg-warning"
              };
              html_text += "<span class='badge m-1 " + badge_class[data["grade"]] + "'>" + data["grade"] + "</span>";
              if (data["cleaned"]) {
                html_text += "<span class='badge rounded-pill bg-warning m-1'>" + "cleaned-up" + "</span>";
              }
              return html_text;
            }
          },
          {
            targets: 4,
            render: function(data, type, row, meta) {
              console.log("Data for rendering:", data);
              let numericData = parseFloat(data);
              if (!isNaN(numericData)) {
                return numericData.toFixed(1) + " %";
              } else {
                return "N/A"; 
            }
           }
          },
          {
            targets: 6,
            render: function(data, type, row, meta) {
              return data; // data is now directly the count of unique BGC names
            }
          }
        ]
      });
    $("div.dataTables_filter input").css('width', '500px');
    $('#table_strains_filter input').unbind().on('keyup input', debounce(function() {
        table.search(this.value).draw();
    }, 500)); // 500 ms delay
    });
  </script>
{% endblock %}